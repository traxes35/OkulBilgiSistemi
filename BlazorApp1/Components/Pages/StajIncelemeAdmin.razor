@page "/admin/staj-inceleme"
@attribute [Authorize(Roles = "Admin")]
@rendermode InteractiveServer

@using BlazorApp1.Data
@using BlazorApp1.Models
@using BlazorApp1.Services.Interfaces
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity

@inject IInternshipService Internship
@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider AuthState

<div class="page-bg">
    <div class="container-fluid py-3">

        <!-- Header -->
        <div class="card-soft p-3 mb-3 header-wrap">
            <div class="d-flex align-items-center gap-3">
                <div class="header-icon d-flex align-items-center justify-content-center">
                    <i class="bi bi-shield-check fs-5"></i>
                </div>
                <div class="flex-grow-1">
                    <h3 class="mb-1">🛡️ Staj Başvuruları (Admin)</h3>
                    <div class="d-flex flex-wrap align-items-center gap-2 mt-2">
                        <span class="status-pill">Seçili: @((apps is null) ? 0 : apps.Count)</span>
                        <span class="status-pill">Durum: @((selected is null) ? 0 : 1)</span>
                        <span class="status-pill">Kuyruktaki: @(apps?.Count ?? 0)</span>
                    </div>

                </div>
            </div>
        </div>

        @if (loading)
        {
            <div class="text-muted">Yükleniyor...</div>
        }
        else
        {
            <div class="row g-4">
                <!-- Sol: Kuyruk -->
                <div class="col-lg-6">
                    <div class="card-soft h-100">
                        <div class="p-3 pb-2 fw-semibold d-flex align-items-center gap-2">
                            <i class="bi bi-inboxes"></i>
                            <span>Admin İnceleme Kuyruğu</span>
                        </div>

                        <div class="px-3 pb-3">
                            @if (apps is null || apps.Count == 0)
                            {
                                <div class="p-3 text-muted">Bekleyen başvuru yok.</div>
                            }
                            else
                            {
                                <div class="scroll-container">
                                    <table class="table table-hover table-sm table-sticky table-colorful table-nowrap mb-0">
                                        <thead>
                                            <tr>
                                                <th>#</th>
                                                <th>Öğrenci</th>
                                                <th>v</th>
                                                <th>Oluşturma</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var a in apps)
                                            {
                                                <tr class="@((selected?.Id == a.Id) ? "table-primary" : null)"
                                                    @onclick="(() => Select(a))"
                                                    style="cursor:pointer">
                                                    <td>@a.Id</td>
                                                    <td>@($"{a.Student?.Isim} {a.Student?.Soyisim}")</td>
                                                    <td>@a.CurrentVersion</td>
                                                    <td>@a.CreatedAt.ToLocalTime().ToString("dd.MM.yyyy HH:mm")</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <!-- Sağ: Detay -->
                <div class="col-lg-6">
                    <div class="card-soft h-100 d-flex flex-column">
                        <div class="p-3 pb-2 fw-semibold d-flex align-items-center gap-2">
                            <i class="bi bi-file-earmark-text"></i>
                            <span>Detay</span>
                        </div>

                        <div class="p-3 pt-0 flex-grow-1">
                            @if (selected is null)
                            {
                                <div class="text-muted">Soldan bir başvuru seçin.</div>
                            }
                            else
                            {
                                <div class="mb-3 d-flex align-items-start justify-content-between gap-2">
                                    <div>
                                        <span class="pill pill-code me-2">#@selected.Id</span>
                                        <strong>@selected.Student?.Isim @selected.Student?.Soyisim</strong>
                                        <div class="small text-muted">v@selected.CurrentVersion</div>
                                    </div>
                                    <div>
                                        <span class="pill pill-term">@selected.Status</span>
                                    </div>
                                </div>

                                <!-- Son PDF -->
                                <div class="mb-3">
                                    <div class="fw-semibold mb-1">Son PDF</div>
                                    @{
                                        var last = selected.Documents?.OrderByDescending(d => d.Version).FirstOrDefault();
                                    }
                                    @if (last is not null)
                                    {
                                        <a class="btn btn-outline-secondary btn-sm hover-lift" target="_blank" href="@($"/{last.FilePath}")">
                                            <i class="bi bi-box-arrow-up-right me-1"></i> v@last.Version indir/gör
                                        </a>
                                    }
                                    else
                                    {
                                        <div class="text-muted">Dosya yok.</div>
                                    }
                                </div>

                                <!-- İşlemler -->
                                <div class="d-flex align-items-center gap-2">
                                    <button class="btn btn-success hover-lift"
                                            @onclick="Approve"
                                            disabled="@DisableApprove">
                                        Onayla (Final)
                                    </button>

                                    <div class="flex-grow-1">
                                        <div class="input-group fancy-field">
                                            <span class="input-group-text"><i class="bi bi-chat-left-text"></i></span>
                                            <input class="form-control"
                                                   placeholder="Reddetme gerekçesi"
                                                   @bind="rejectReason" />
                                        </div>
                                    </div>

                                    <button class="btn btn-gradient-danger hover-lift"
                                            @onclick="Reject"
                                            disabled="@DisableReject">
                                        Reddet
                                    </button>
                                </div>

                                <!-- Bilgi / Hata -->
                                @if (!string.IsNullOrEmpty(info) || !string.IsNullOrEmpty(err))
                                {
                                    <div class="mt-3">
                                        @if (!string.IsNullOrEmpty(info))
                                        {
                                            <div class="alert alert-success py-2 mb-2">@info</div>
                                        }
                                        @if (!string.IsNullOrEmpty(err))
                                        {
                                            <div class="alert alert-danger py-2 mb-0">@err</div>
                                        }
                                    </div>
                                }

                                <!-- Debug küçük satır -->
                                <div class="small text-muted mt-3">
                                    DBG → busy: @busy,
                                    selected null: @(selected is null),
                                    status: @selected?.Status,
                                    reasonEmpty: @string.IsNullOrWhiteSpace(rejectReason),
                                    DisableReject: @DisableReject,
                                    DisableApprove: @DisableApprove
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    bool loading = true;
    List<InternshipApplication>? apps;
    InternshipApplication? selected;
    string rejectReason = "";
    string? info;
    string? err;
    bool busy = false;

    bool DisableReject =>
        busy ||
        selected is null ||
        selected.Status != InternshipStatus.InAdminReview ||
        string.IsNullOrWhiteSpace(rejectReason);

    bool DisableApprove =>
        busy ||
        selected is null ||
        selected.Status != InternshipStatus.InAdminReview;

    protected override async Task OnInitializedAsync()
    {
        await Reload();
        loading = false;
    }

    async Task Reload()
    {
        apps = await Internship.ListForAdminAsync();
        if (selected != null)
            selected = apps.FirstOrDefault(a => a.Id == selected.Id);
    }

    void Select(InternshipApplication a)
    {
        selected = a;
        rejectReason = "";
        info = err = null;
    }

    async Task Approve()
    {
        if (DisableApprove) return;

        busy = true;
        StateHasChanged();

        try
        {
            var auth = await AuthState.GetAuthenticationStateAsync();
            var me = await UserManager.GetUserAsync(auth.User);
            if (me is null) { err = "Kullanıcı bulunamadı."; return; }

            await Internship.AdminApproveAsync(selected!.Id, me.Id);
            info = "Başvuru onaylandı (final).";
            await Reload();
            selected = null; // aynı kayda tekrar basılmasın
        }
        catch (Exception ex)
        {
            err = ex.Message;
        }
        finally
        {
            busy = false;
            await InvokeAsync(StateHasChanged);
        }
    }

    async Task Reject()
    {
        info = err = null;

        if (DisableReject)
        {
            if (selected is null) err = "Seçili başvuru yok.";
            else if (selected.Status != InternshipStatus.InAdminReview) err = "Bu başvuru artık admin incelemesinde değil.";
            else if (string.IsNullOrWhiteSpace(rejectReason)) err = "Reddetme gerekçesi zorunlu.";
            return;
        }

        busy = true;
        StateHasChanged();

        try
        {
            var auth = await AuthState.GetAuthenticationStateAsync();
            var me = await UserManager.GetUserAsync(auth.User);
            if (me is null) { err = "Kullanıcı bulunamadı."; return; }

            await Internship.AdminRejectAsync(selected!.Id, me.Id, rejectReason);

            info = "Reddedildi. Öğretmenin bilgilendirmesi bekleniyor.";
            await Reload();
            selected = null;
            rejectReason = "";
        }
        catch (Exception ex)
        {
            err = ex.Message;
        }
        finally
        {
            busy = false;
            await InvokeAsync(StateHasChanged);
        }
    }
}
